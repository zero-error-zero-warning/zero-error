jdbc.driver = com.mysql.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/restaurantsys
jdbc.username = root
jdbc.password = 123456
# 最大活动连接，连接池中可同时连接的最大的连接数（默认值为8）
jdbc.connectionPool.maxActive=20
#初始化连接，连接池启动时创建的初始化连接数量（默认值为0）
jdbc.connectionPool.initialSize=4

# 最小空闲连接，连接池中最小的空闲的连接数，低于这个数量会被创建新的连接（默认为0，该参数越接近maxIdle，性能越好，因为连接的创建和销毁，都是需要消耗资源的；但是不能太大，因为在机器很空闲的时候，也会创建低于minidle个数的连接
jdbc.connectionPool.minIdle=5

# 最大空闲连接，连接池中最大的空闲的连接数，超过的空闲连接将被释放，如果设置为负数表示不限制（默认为8个，maxIdle不能设置太小，因为假如在高负载的情况下，连接的打开时间比关闭的时间快，会引起连接池中idle的个数上升超过maxIdle，而造成频繁的连接销毁和创建
jdbc.connectionPool.maxIdle=20

#从池中取连接的最大等待时间，单位ms.当没有可用连接时，连接池等待连接释放的最大时间，超过该时间限制会抛出异常，如果设置-1表示无限等待（默认为无限）
jdbc.connectionPool.maxWait=60000

#指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
jdbc.connectionPool.testWhileIdle=true

#  验证使用的SQL语句
jdbc.connectionPoolvalidationQuery=SELECT 1

#借出连接时不要测试，否则很影响性能。一定要配置，因为它的默认值是true。false表示每次从连接池中取出连接时，不需要执行validationQuery = "SELECT 1" 中的SQL进行测试。若配置为true,对性能有非常大的影响，性能会下降7-10倍。
jdbc.connectionPool.testOnBorrow =false

#每30秒运行一次空闲连接回收器，配置timeBetweenEvictionRunsMillis = "30000"后，每30秒运行一次空闲连接回收器（独立线程）。并每次检查3个连接，如果连接空闲时间超过30分钟就销毁。销毁连接后，连接数量就少了，如果小于minIdle数量，就新建连接，维护数量不少于minIdle，过行了新老更替。
jdbc.connectionPool.timeBetweenEvictionRunsMillis = "30000"

#池中的连接空闲30分钟后被回收
jdbc.connectionPool.minEvictableIdleTimeMillis = "1800000"

#在每次空闲连接回收器线程(如果有)运行时检查的连接数量
jdbc.connectionPool.numTestsPerEvictionRun="3"

#连接泄漏回收参数，当可用连接数少于3个时才执行
jdbc.connectionPool.removeAbandoned="true"

#连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值
jdbc.connectionPool.removeAbandonedTimeout="180"

#  dbcp   数据源设置